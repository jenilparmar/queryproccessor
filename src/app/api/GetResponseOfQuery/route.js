import { MongoClient } from "mongodb";
import { getResponseFromGEMINI } from "./getGeminiResponse";

export async function POST(req) {
  try {
    const { query, dbname, colName, uri } = await req.json();

    if (!query || !dbname || !colName || !uri) {
      return new Response(JSON.stringify({ error: "Missing required field" }), { status: 400 });
    }

    const client = new MongoClient(uri);

    try {
      await client.connect();
      const database = client.db(dbname);
      const collection = database.collection(colName);

      // Get the MongoDB query filter from Gemini
      const responseFromGemini = await getResponseFromGEMINI(query);
      if (!responseFromGemini) {
        return new Response(JSON.stringify({ error: "Invalid query generated by Gemini" }), { status: 400 });
      }

      // ✅ Ensure find() is awaited before closing the client
      const dataToSend = await collection.find(responseFromGemini).toArray();

      return new Response(JSON.stringify(dataToSend), { status: 200 });
    } catch (error) {
      console.error("Query Error:", error);
      return new Response(JSON.stringify({ message: "Something went wrong!" }), { status: 500 });
    } finally {
      // ✅ Close the connection only after the query execution
      await client.close();
    }
  } catch (error) {
    console.error("MongoDB Connection Error:", error);
    return new Response(JSON.stringify({ error: "Failed to fetch database info" }), { status: 500 });
  }
}
